@model ThePie.Models.Author
@using ThePie.Models

@{
  ViewData["Title"] = "Create";
}

<body class="create-comics-page">
  @*here*@

  <div class="homeTitle animate__animated animate__shakeY">
    Show me what you got!
  </div>

  <div class="row">
    <div class="col-md-4">
      <form asp-action="Create">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
          <label asp-for="Name" class="control-label"></label>
          <input asp-for="Name" class="form-control" />
          <span asp-validation-for="Name" class="text-danger"></span>
        </div>
        <div class="form-group">
          <label asp-for="PosterId" class="control-label"></label>
          <select asp-for="PosterId" class="form-control" asp-items="ViewBag.PosterId"></select>
        </div>
        <div>
          @Html.DropDownListFor(m => m.AuthorSex, new SelectList(Enum.GetValues(typeof(Author.Sex))), "Select Gender")
        </div>
        <div class="form-group form-check">
          <label class="form-check-label">
            <input class="form-check-input" asp-for="Active" /> @Html.DisplayNameFor(model => model.Active)
          </label>
        </div>
        <div class="form-group">
          <input type="submit" value="Create" class="btn btn-primary" />
        </div>
      </form>
    </div>
  </div>
  <p>
    <a asp-action="Index" class="btn btn-dark"> <i class="fas fa-hand-point-left"></i> &nbsp;Take a step back!</a>
  </p>
</body>

@section Scripts {
  @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
